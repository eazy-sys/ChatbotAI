name: Deploy to AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ACR_NAME: juniochatbotacr
  AKS_CLUSTER_NAME: OpenAI-AKS
  RESOURCE_GROUP: OpenAI-RG
  NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ./chatbot/fastapi-app
        push: true
        tags: ${{ env.ACR_NAME }}.azurecr.io/fastapi-app:${{ github.sha }}
        file: ./chatbot/fastapi-app/Dockerfile

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Create OpenAI secret
      run: |
        kubectl create secret generic openai-secret \
          --from-literal=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Update Kubernetes manifests
      run: |
        cd chatbot/fastapi-app/kubernetes
        sed -i "s|juniochatbotacr.azurecr.io/fastapi-app:latest|${{ env.ACR_NAME }}.azurecr.io/fastapi-app:${{ github.sha }}|" deployment.yaml
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl apply -f ingress.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/chatbot-deployment
        kubectl get services chatbot-service